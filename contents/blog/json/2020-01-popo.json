{
  "title": "popo",
  "created_at": "2020-01-22T00:00:00.000Z",
  "slug": "popo",
  "thumbnail": "/blog/2020/01/22/thumb.png",
  "category": {
    "name": "tech",
    "slug": "tech"
  },
  "tags": [
    {
      "name": "Nuxt.js",
      "slug": "nuxt-js"
    },
    {
      "name": "jade",
      "slug": "jade"
    },
    {
      "name": "gulp",
      "slug": "gulp"
    }
  ],
  "description": "fugofugofugofugofugofugofugofugofugofugofugofugo",
  "bodyContent": "# hoge\n## ふご\n\n本文です。本文です。本文です。本文です。本文です。本文です。\n本文です。本文です。本文です。本文です。本文です。本文です。\n本文です。本文です。本文です。本文です。本文です。本文です。\n本文です。本文です。本文です。本文です。本文です。本文です。\n\n```\"lang\":\"javascript\",\"title\":\"main.js\",\"highlight\":\"3-10\"\nload () {\n  this.transition = false\n  this.loadWidth = 0\n  let loadCounter = 0\n  const imgList = document.images\n  const imgLenght = document.images.length\n\n  this.loadCount = () => {\n    loadCounter++\n  }\n\n  for (let count = 0; count < imgLenght; count++) {\n    imgList[count].addEventListener('load', this.loadCount)\n  }\n\n  const loading = function () {\n    this.loadWidth = loadCounter / imgLenght * 100\n\n    if (this.loadWidth === 100) {\n      for (let count = 0; count < imgLenght; count++) {\n        imgList[count].removeEventListener('load', this.loadCount)\n      }\n      cancelAnimationFrame(loading)\n    } else {\n      requestAnimationFrame(loading)\n    }\n  }.bind(this)\n\n  const initial = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve()\n    }, 50)\n  })\n\n  initial.then(() => {\n    this.transition = true\n    requestAnimationFrame(loading)\n  })\n},\n```\n\n```\"lang\":\"javascript\"\nほげほげ\nあsdf\nあsdふぁsdf\n```\n\n```\"title\":\"main.js\",\"number\":false\nほげほげ\nあsdふぁsdf\nあsdふぁsdふぁsdふぁsdふぁsdf\n```\n\n```\"lang\":\"javascript\"\nほげほげ\n```\n\n```\"highlight\":3\nほげほげ\n```",
  "bodyHtml": "<h1>hoge</h1>\n<h2>ふご</h2>\n<p>本文です。本文です。本文です。本文です。本文です。本文です。\n本文です。本文です。本文です。本文です。本文です。本文です。\n本文です。本文です。本文です。本文です。本文です。本文です。\n本文です。本文です。本文です。本文です。本文です。本文です。</p>\n<pre><code class=\"hljs\">load () {\n  this.transition = false\n  this.loadWidth = 0\n  let loadCounter = 0\n  const imgList = document.images\n  const imgLenght = document.images.length\n\n  this.loadCount = () =&gt; {\n    loadCounter++\n  }\n\n  for (let count = 0; count &lt; imgLenght; count++) {\n    imgList[count].addEventListener('load', this.loadCount)\n  }\n\n  const loading = function () {\n    this.loadWidth = loadCounter / imgLenght * 100\n\n    if (this.loadWidth === 100) {\n      for (let count = 0; count &lt; imgLenght; count++) {\n        imgList[count].removeEventListener('load', this.loadCount)\n      }\n      cancelAnimationFrame(loading)\n    } else {\n      requestAnimationFrame(loading)\n    }\n  }.bind(this)\n\n  const initial = new Promise((resolve, reject) =&gt; {\n    setTimeout(() =&gt; {\n      resolve()\n    }, 50)\n  })\n\n  initial.then(() =&gt; {\n    this.transition = true\n    requestAnimationFrame(loading)\n  })\n},</code></pre><pre><code class=\"hljs\">ほげほげ\nあsdf\nあsdふぁsdf</code></pre><pre><code class=\"hljs\">ほげほげ\nあsdふぁsdf\nあsdふぁsdふぁsdふぁsdふぁsdf</code></pre><pre><code class=\"hljs\">ほげほげ</code></pre><pre><code class=\"hljs\">ほげほげ</code></pre>",
  "dir": "contents/blog/json",
  "base": "2020-01-popo.json",
  "ext": ".json",
  "sourceBase": "2020-01-popo.md",
  "sourceExt": ".md"
}